close all; clear; clc;

[G_0, G_1] = importfile("gradient.csv");
[T_0, T_1] = importfile("penalty.csv");
[M] = importvec("mass.csv");
[rhs] = importvec("rhs.csv");
[t_sol] = importvec("sol.csv");

for i = 1:length(G_0)
    if (abs(G_0(i)) < 1.0e-8)
        G_0(i) = 0;
        T_0(i) = 0;
    end
end

for i = 1:length(G_1)
    if (abs(G_1(i)) < 1.0e-8)
        G_1(i) = 0;
        T_1(i) = 0;
    end
end

M = spdiags(M,0,length(M),length(M)); 

G_0 = reshape(G_0,[sqrt(length(G_0)),sqrt(length(G_0))])';
G_1 = reshape(G_1,[sqrt(length(G_1)),sqrt(length(G_1))])';

T_0 = reshape(T_0,[sqrt(length(T_0)),sqrt(length(T_0))])';
T_1 = reshape(T_1,[sqrt(length(T_1)),sqrt(length(T_1))])';

G_0 = sparse(G_0);
G_1 = sparse(G_1);

T_0 = sparse(T_0);
T_1 = sparse(T_1);

A = G_0'*M*G_0+G_1'*M*G_1 + T_0+T_1;

sol = A\(M*rhs);

norm(sol-t_sol)

% figure
% subplot(2,2,1)
% spy(G_0)
% title 'G_0'
% subplot(2,2,2)
% spy(G_1)
% title 'G_1'
% subplot(2,2,3)
% spy(G_0'*G_0)
% title 'G_0^T G_0'
% subplot(2,2,4)
% spy(G_1'*G_1)
% title 'G_1^T G_1'
% 
% figure
% spy(G_0'*G_0+G_1'*G_1)

function M = importvec(filename, dataLines)
%IMPORTFILE Import data from a text file
%  M = IMPORTFILE(FILENAME) reads data from text file FILENAME for the
%  default selection.  Returns the data as column vectors.
%
%  M = IMPORTFILE(FILE, DATALINES) reads data for the specified row
%  interval(s) of text file FILENAME. Specify DATALINES as a positive
%  scalar integer or a N-by-2 array of positive scalar integers for
%  dis-contiguous row intervals.
%
%  Example:
%  M = importfile("/home/mblomquist/CLionProjects/LDG_Poisson/out/mass.csv", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 31-Jul-2023 10:18:54

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 1);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = "M";
opts.VariableTypes = "double";

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
tbl = readtable(filename, opts);

%% Convert to output type
M = tbl.M;
end

function [G_0, G_1] = importfile(filename, dataLines)
%IMPORTFILE Import data from a text file
%  [G_0, G_1] = IMPORTFILE(FILENAME) reads data from text file FILENAME
%  for the default selection.  Returns the data as column vectors.
%
%  [G_0, G_1] = IMPORTFILE(FILE, DATALINES) reads data for the specified
%  row interval(s) of text file FILENAME. Specify DATALINES as a
%  positive scalar integer or a N-by-2 array of positive scalar integers
%  for dis-contiguous row intervals.
%
%  Example:
%  [G_0, G_1] = importfile("/home/mblomquist/Research/LBL/Saye/LDG_Poisson/out/gradient.csv", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 28-Jul-2023 14:29:09

%% Input handling

% If dataLines is not specified, define defaults
if nargin < 2
    dataLines = [2, Inf];
end

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 2);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["G_0", "G_1"];
opts.VariableTypes = ["double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
tbl = readtable(filename, opts);

%% Convert to output type
G_0 = tbl.G_0;
G_1 = tbl.G_1;
end